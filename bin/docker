#!/usr/bin/env bash

cd docker

red="\e[31m"
yellow="\e[33m"
reset="\e[0m"

prefix="room-609-"
default="php-fpm"

dockerCompose="docker-compose -f docker-compose.yml"
declare -a services=($($dockerCompose config --services))
for index in "${!services[@]}"; do
    services["${index}"]="${services["${index}"]#"${prefix}"}"
done

function print_usage {
    echo "Usage: ${0} [SERVICE] COMMAND..."
    echo -e "  SERVICE: One of ${yellow}${services[@]}${reset} (default: ${yellow}${default}${reset})"
    echo -e "  COMMAND: The command to run in the container"
    exit 128
}

function is_service {
    local needle="${1}"

    for value in "${services[@]}"; do
        if [[ "${value}" = "${needle}" ]]; then
            echo 1
            return
        fi
    done

    echo 0
}

if [[ "${#}" -eq 0 ]]; then
    print_usage
fi

service_given=0
service="${default}"
command=("${@}")

if [[ $(is_service "${1}") -eq 1 ]]; then
    service_given=1
    service="${1}"
fi

if [[ ${service_given} -eq 1 ]]; then
    if [[ "${#}" -eq 1 ]]; then
        echo -e "${red}Service was not followed by a command${reset}"
        print_usage
    fi

    command=("${command[@]:1}")
fi

if [[ -z $(docker ps -q --no-trunc | grep $($dockerCompose ps -q "${prefix}${service}")) ]]; then
    echo -e "==> Bringing ${yellow}${prefix}${service}${reset} up"
    docker-compose up -d
fi

echo -e "==> Running ${yellow}${command[@]}${reset} on ${yellow}${prefix}${service}${reset}"
$dockerCompose exec "${prefix}${service}" "${command[@]}"
